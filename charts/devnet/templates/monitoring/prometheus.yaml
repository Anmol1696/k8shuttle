{{- if .Values.monitoring.enabled }}
{{ $defaultFile := $.Files.Get "defaults.yaml" | fromYaml }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    # my global config
    global:
      scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.
        static_configs:
          - targets: ['localhost:9090']
      {{- range $i, $chain := .Values.chains }}
      {{ $fullchain := include "devnet.fullchain" (dict "name" $chain.name "file" $defaultFile "context" $) | fromJson }}
      {{- if $fullchain.metrics }}
      - job_name: '{{ $fullchain.name }}-genesis'
        static_configs:
          - targets: ['{{ $fullchain.hostname }}-genesis.{{ $.Release.Namespace }}.svc.cluster.local:26660']
            labels:
              node: genesis
              type: genesis
              chain: "{{ $fullchain.name }}"
      {{- if gt $chain.numValidators 1.0}}
      {{- range $n, $e := until ($chain.numValidators | int) }}
      - job_name: '{{ $fullchain.name }}-validator-{{ $n }}'
        static_configs:
          - targets: ['{{ $fullchain.hostname }}-validator-{{ $n }}.{{ $fullchain.hostname }}-validator.{{ $.Release.Namespace }}.svc.cluster.local:26660']
            labels:
              node: "validator-{{ $n }}"
              type: validator
              chain: "{{ $fullchain.name }}"
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '9090'
spec:
  clusterIP: None
  ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/name: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - '--storage.tsdb.retention=6h'
            - '--storage.tsdb.path=/prometheus'
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - name: web
              containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
            - name: prometheus-storage-volume
              mountPath: /prometheus
      restartPolicy: Always
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-config
        - name: prometheus-storage-volume
          emptyDir: { }
---
{{- end }}