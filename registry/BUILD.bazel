load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "lib",
    srcs = [
        "app.go",
        "config.go",
        "const.go",
        "handler.go",
        "main.go",
    ],
    importpath = "",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_anmol1696_starship_registry//registry:go_default_library",
        "@com_github_go_chi_chi//middleware",
        "@com_github_golang_protobuf//jsonpb:go_default_library_gen",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//:go-grpc-middleware",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap",
        "@com_github_grpc_ecosystem_go_grpc_middleware//recovery",
        "@com_github_grpc_ecosystem_go_grpc_middleware//tags",
        "@com_github_grpc_ecosystem_grpc_gateway_v2//runtime",
        "@com_github_urfave_cli//:cli",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_uber_go_zap//:zap",
    ],
)

go_binary(
    name = "registry",
    embed = [":registry_lib"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "registry_lib",
    srcs = [
        "app.go",
        "config.go",
        "const.go",
        "handler.go",
        "main.go",
    ],
    importpath = "github.com/Anmol1696/starship/registry",
    visibility = ["//visibility:private"],
    deps = [
        "//build/bin/external/com_google_protobuf/_virtual_imports/empty_proto/google/protobuf:emptypb",
        "//registry/registry",
        "@com_github_go_chi_chi//middleware",
        "@com_github_golang_protobuf//jsonpb:go_default_library_gen",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//:go-grpc-middleware",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap",
        "@com_github_grpc_ecosystem_go_grpc_middleware//recovery",
        "@com_github_grpc_ecosystem_go_grpc_middleware//tags",
        "@com_github_grpc_ecosystem_grpc_gateway_v2//runtime:go_default_library",
        "@com_github_urfave_cli//:cli",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_zap//:zap",
    ],
)
